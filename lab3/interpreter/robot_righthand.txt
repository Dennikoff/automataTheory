function work(int a)
begin
    findexit();
end
return 0;

function findexit()
begin
    int i set 0;
    int x set 1;
    int y set 1;
    go(i)
end
return 0;


function go(int dir)
begin
    if i == 0 then
    begin
        int result set move;
    end
    else
    begin
        if i == 1 then

        else
            if i == 2 then

            else
                if i == 3 then


                else;

    end

end


function mylms()
begin
    bool flag set false;
    int r set lms;
    if r first smaller 0 then
    begin
        go_right(r);
        flag set true;
    end
    else
    begin
        int l set lms;
        if l first larger 0 then
        begin
            go_left(l);
            flag set false;
        end
        else
            int nothing;
    end
end
return flag;


function go_right(int steps)
begin
    do
    begin
        right;
        steps set steps add 1;
    end
    while steps first smaller 0;
end
return 0;


function go_left(int steps)
begin
    do
    begin
        left;
        steps set steps sub 1;
    end
    while steps first larger 0;
end
return 0;