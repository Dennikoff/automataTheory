
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ADD AND BEGIN BOOL CLBR COMMA CUCLBR CUOPBR DO ELSE END ENDSTR EQUAL FALSE FIRST FUNCTION IF INT INTTYP LARGER LEFT LMS MOVE NEWLINE NOT OPBR OR RETURN RIGHT SECOND SET SHORT SHORTTYP SIZEOF SMALLER SQCLBR SQOPBR SUB THEN TRUE UNDEFINED VARIABLE VECTOROF WHILEprogram : statement_liststatement_list : statement_list single_statement\n                          | single_statementsingle_statement : declaration ENDSTR\n                            | setting ENDSTR\n                            | if\n                            | dowhile\n                            | function\n                            | callfunc ENDSTR\n                            | cmd ENDSTR\n                            | ENDSTRdeclaration : type vartype : INT\n                | BOOL\n                | SHORT INT\n                | SHORTvar : variable\n               | setting\n               | var COMMA varsetting : variable SET exprexpr : variable\n                | const\n                | math_expr\n                | callfunc\n                | cmd\n                | OPBR expr CLBRsetting : variable SET setarrtype : vectorofvectorof : VECTOROF typesetarr : CUOPBR setarr CUCLBR\n                  | setarr COMMA setarr\n                  | exprarrexprarr : exprarr COMMA exprarr\n                   | exprconst : digit\n                 | bool\n                 | sizeofvariable : VARIABLE\n                    | VARIABLE indexindex : SQOPBR expr SQCLBR\n                 | index indexsizeof : SIZEOF OPBR type CLBR\n                  | SIZEOF OPBR variable CLBRbool : TRUE\n                | FALSE\n                | UNDEFINEDdigit : INTTYP\n                 | SHORTTYPmath_expr : expr EQUAL expr\n                     | expr SUB expr\n                     | expr ADD expr\n                     | expr SECOND LARGER expr\n                     | expr SECOND SMALLER expr\n                     | expr FIRST LARGER expr\n                     | expr FIRST SMALLER expr\n                     | expr AND expr\n                     | expr OR expr\n                     | expr NOT AND expr\n                     | expr NOT OR exprcallfunc : VARIABLE OPBR varlist CLBRvarlist : variable\n                   | const\n                   | varlist COMMA varlist\n                   | if : IF expr THEN statement_gr ELSE statement_grif : IF expr THEN statement_gr error\n              | IF expr errorstatement_gr : BEGIN statement_list END\n                        | single_statementdowhile : DO statement_gr WHILE expr ENDSTRdowhile : DO errorfunction : FUNCTION VARIABLE OPBR arrtype CLBR statement_gr RETURN expr ENDSTRarrtype : type VARIABLE\n                   | arrtype COMMA arrtype\n                   | cmd : MOVE\n               | MOVE dir\n               | RIGHT\n               | LEFT\n               | LMSdir : RIGHT\n               | LEFT'
    
_lr_action_items = {'ENDSTR':([0,2,3,4,5,6,7,8,9,10,11,15,18,19,20,21,27,28,29,30,31,32,33,34,35,38,39,40,41,42,44,45,46,47,48,49,50,51,52,55,56,57,60,62,63,64,68,69,71,72,73,85,90,92,95,98,99,100,105,106,109,112,113,116,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,137,141,142,],[5,5,-3,28,-11,29,-6,-7,-8,30,31,5,-76,-78,-79,-80,-2,-4,-5,-9,-10,-12,-17,-18,-38,-21,-22,-23,-24,-25,-38,-35,-36,-37,-47,-48,-44,-45,-46,-71,5,-69,-39,-77,-81,-82,-20,-27,-32,5,-67,5,-41,-19,-34,-49,-50,-51,-56,-57,-26,132,-68,-60,-40,-31,-30,-33,5,-66,-52,-53,-54,-55,-58,-59,-42,-43,-70,5,-65,142,-72,]),'IF':([0,2,3,5,7,8,9,15,27,28,29,30,31,55,56,57,72,73,85,113,122,123,132,133,137,142,],[14,14,-3,-11,-6,-7,-8,14,-2,-4,-5,-9,-10,-71,14,-69,14,-67,14,-68,14,-66,-70,14,-65,-72,]),'DO':([0,2,3,5,7,8,9,15,27,28,29,30,31,55,56,57,72,73,85,113,122,123,132,133,137,142,],[15,15,-3,-11,-6,-7,-8,15,-2,-4,-5,-9,-10,-71,15,-69,15,-67,15,-68,15,-66,-70,15,-65,-72,]),'FUNCTION':([0,2,3,5,7,8,9,15,27,28,29,30,31,55,56,57,72,73,85,113,122,123,132,133,137,142,],[16,16,-3,-11,-6,-7,-8,16,-2,-4,-5,-9,-10,-71,16,-69,16,-67,16,-68,16,-66,-70,16,-65,-72,]),'VARIABLE':([0,2,3,5,7,8,9,12,14,15,16,22,23,24,25,27,28,29,30,31,36,43,55,56,57,59,61,65,66,67,70,72,73,74,75,76,79,80,83,84,85,93,96,101,102,103,104,107,108,113,115,117,122,123,132,133,137,140,142,],[17,17,-3,-11,-6,-7,-8,35,44,17,58,-13,-14,-16,-28,-2,-4,-5,-9,-10,44,44,-71,17,-69,35,44,-15,-29,35,44,17,-67,44,44,44,44,44,35,44,17,44,44,44,44,44,44,44,44,-68,135,35,17,-66,-70,17,-65,44,-72,]),'MOVE':([0,2,3,5,7,8,9,14,15,27,28,29,30,31,36,43,55,56,57,61,70,72,73,74,75,76,79,80,84,85,93,96,101,102,103,104,107,108,113,122,123,132,133,137,140,142,],[18,18,-3,-11,-6,-7,-8,18,18,-2,-4,-5,-9,-10,18,18,-71,18,-69,18,18,18,-67,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,-68,18,-66,-70,18,-65,18,-72,]),'RIGHT':([0,2,3,5,7,8,9,14,15,18,27,28,29,30,31,36,43,55,56,57,61,70,72,73,74,75,76,79,80,84,85,93,96,101,102,103,104,107,108,113,122,123,132,133,137,140,142,],[19,19,-3,-11,-6,-7,-8,19,19,63,-2,-4,-5,-9,-10,19,19,-71,19,-69,19,19,19,-67,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,-68,19,-66,-70,19,-65,19,-72,]),'LEFT':([0,2,3,5,7,8,9,14,15,18,27,28,29,30,31,36,43,55,56,57,61,70,72,73,74,75,76,79,80,84,85,93,96,101,102,103,104,107,108,113,122,123,132,133,137,140,142,],[20,20,-3,-11,-6,-7,-8,20,20,64,-2,-4,-5,-9,-10,20,20,-71,20,-69,20,20,20,-67,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,-68,20,-66,-70,20,-65,20,-72,]),'LMS':([0,2,3,5,7,8,9,14,15,27,28,29,30,31,36,43,55,56,57,61,70,72,73,74,75,76,79,80,84,85,93,96,101,102,103,104,107,108,113,122,123,132,133,137,140,142,],[21,21,-3,-11,-6,-7,-8,21,21,-2,-4,-5,-9,-10,21,21,-71,21,-69,21,21,21,-67,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,-68,21,-66,-70,21,-65,21,-72,]),'INT':([0,2,3,5,7,8,9,15,24,26,27,28,29,30,31,55,56,57,72,73,83,85,86,113,122,123,132,133,134,137,142,],[22,22,-3,-11,-6,-7,-8,22,65,22,-2,-4,-5,-9,-10,-71,22,-69,22,-67,22,22,22,-68,22,-66,-70,22,22,-65,-72,]),'BOOL':([0,2,3,5,7,8,9,15,26,27,28,29,30,31,55,56,57,72,73,83,85,86,113,122,123,132,133,134,137,142,],[23,23,-3,-11,-6,-7,-8,23,23,-2,-4,-5,-9,-10,-71,23,-69,23,-67,23,23,23,-68,23,-66,-70,23,23,-65,-72,]),'SHORT':([0,2,3,5,7,8,9,15,26,27,28,29,30,31,55,56,57,72,73,83,85,86,113,122,123,132,133,134,137,142,],[24,24,-3,-11,-6,-7,-8,24,24,-2,-4,-5,-9,-10,-71,24,-69,24,-67,24,24,24,-68,24,-66,-70,24,24,-65,-72,]),'VECTOROF':([0,2,3,5,7,8,9,15,26,27,28,29,30,31,55,56,57,72,73,83,85,86,113,122,123,132,133,134,137,142,],[26,26,-3,-11,-6,-7,-8,26,26,-2,-4,-5,-9,-10,-71,26,-69,26,-67,26,26,26,-68,26,-66,-70,26,26,-65,-72,]),'$end':([1,2,3,5,7,8,9,27,28,29,30,31,55,57,73,113,123,132,137,142,],[0,-1,-3,-11,-6,-7,-8,-2,-4,-5,-9,-10,-71,-69,-67,-68,-66,-70,-65,-72,]),'END':([3,5,7,8,9,27,28,29,30,31,55,57,73,85,113,123,132,137,142,],[-3,-11,-6,-7,-8,-2,-4,-5,-9,-10,-71,-69,-67,113,-68,-66,-70,-65,-72,]),'WHILE':([5,7,8,9,28,29,30,31,54,55,57,73,113,123,132,137,142,],[-11,-6,-7,-8,-4,-5,-9,-10,84,-71,-69,-67,-68,-66,-70,-65,-72,]),'ELSE':([5,7,8,9,28,29,30,31,55,57,73,97,113,123,132,137,142,],[-11,-6,-7,-8,-4,-5,-9,-10,-71,-69,-67,122,-68,-66,-70,-65,-72,]),'error':([5,7,8,9,15,18,19,20,21,28,29,30,31,37,38,39,40,41,42,44,45,46,47,48,49,50,51,52,55,57,60,62,63,64,73,90,97,98,99,100,105,106,109,113,116,118,123,124,125,126,127,128,129,130,131,132,137,142,],[-11,-6,-7,-8,55,-76,-78,-79,-80,-4,-5,-9,-10,73,-21,-22,-23,-24,-25,-38,-35,-36,-37,-47,-48,-44,-45,-46,-71,-69,-39,-77,-81,-82,-67,-41,123,-49,-50,-51,-56,-57,-26,-68,-60,-40,-66,-52,-53,-54,-55,-58,-59,-42,-43,-70,-65,-72,]),'RETURN':([5,7,8,9,28,29,30,31,55,57,73,113,123,132,137,138,142,],[-11,-6,-7,-8,-4,-5,-9,-10,-71,-69,-67,-68,-66,-70,-65,140,-72,]),'SET':([13,17,33,35,60,90,118,],[36,-38,36,-38,-39,-41,-40,]),'OPBR':([14,17,36,43,44,53,58,61,70,74,75,76,79,80,84,93,96,101,102,103,104,107,108,140,],[43,59,43,43,59,83,86,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,]),'INTTYP':([14,36,43,59,61,70,74,75,76,79,80,84,93,96,101,102,103,104,107,108,117,140,],[48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,]),'SHORTTYP':([14,36,43,59,61,70,74,75,76,79,80,84,93,96,101,102,103,104,107,108,117,140,],[49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,]),'TRUE':([14,36,43,59,61,70,74,75,76,79,80,84,93,96,101,102,103,104,107,108,117,140,],[50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,]),'FALSE':([14,36,43,59,61,70,74,75,76,79,80,84,93,96,101,102,103,104,107,108,117,140,],[51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,]),'UNDEFINED':([14,36,43,59,61,70,74,75,76,79,80,84,93,96,101,102,103,104,107,108,117,140,],[52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,]),'SIZEOF':([14,36,43,59,61,70,74,75,76,79,80,84,93,96,101,102,103,104,107,108,117,140,],[53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,]),'BEGIN':([15,72,122,133,],[56,56,56,56,]),'SQOPBR':([17,35,44,60,90,118,],[61,61,61,61,61,-40,]),'THEN':([18,19,20,21,37,38,39,40,41,42,44,45,46,47,48,49,50,51,52,60,62,63,64,90,98,99,100,105,106,109,116,118,124,125,126,127,128,129,130,131,],[-76,-78,-79,-80,72,-21,-22,-23,-24,-25,-38,-35,-36,-37,-47,-48,-44,-45,-46,-39,-77,-81,-82,-41,-49,-50,-51,-56,-57,-26,-60,-40,-52,-53,-54,-55,-58,-59,-42,-43,]),'EQUAL':([18,19,20,21,37,38,39,40,41,42,44,45,46,47,48,49,50,51,52,60,62,63,64,68,82,90,91,95,98,99,100,105,106,109,112,116,118,124,125,126,127,128,129,130,131,141,],[-76,-78,-79,-80,74,-21,-22,-23,-24,-25,-38,-35,-36,-37,-47,-48,-44,-45,-46,-39,-77,-81,-82,74,74,-41,74,74,74,74,74,74,74,-26,74,-60,-40,74,74,74,74,74,74,-42,-43,74,]),'SUB':([18,19,20,21,37,38,39,40,41,42,44,45,46,47,48,49,50,51,52,60,62,63,64,68,82,90,91,95,98,99,100,105,106,109,112,116,118,124,125,126,127,128,129,130,131,141,],[-76,-78,-79,-80,75,-21,-22,-23,-24,-25,-38,-35,-36,-37,-47,-48,-44,-45,-46,-39,-77,-81,-82,75,75,-41,75,75,75,75,75,75,75,-26,75,-60,-40,75,75,75,75,75,75,-42,-43,75,]),'ADD':([18,19,20,21,37,38,39,40,41,42,44,45,46,47,48,49,50,51,52,60,62,63,64,68,82,90,91,95,98,99,100,105,106,109,112,116,118,124,125,126,127,128,129,130,131,141,],[-76,-78,-79,-80,76,-21,-22,-23,-24,-25,-38,-35,-36,-37,-47,-48,-44,-45,-46,-39,-77,-81,-82,76,76,-41,76,76,76,76,76,76,76,-26,76,-60,-40,76,76,76,76,76,76,-42,-43,76,]),'SECOND':([18,19,20,21,37,38,39,40,41,42,44,45,46,47,48,49,50,51,52,60,62,63,64,68,82,90,91,95,98,99,100,105,106,109,112,116,118,124,125,126,127,128,129,130,131,141,],[-76,-78,-79,-80,77,-21,-22,-23,-24,-25,-38,-35,-36,-37,-47,-48,-44,-45,-46,-39,-77,-81,-82,77,77,-41,77,77,77,77,77,77,77,-26,77,-60,-40,77,77,77,77,77,77,-42,-43,77,]),'FIRST':([18,19,20,21,37,38,39,40,41,42,44,45,46,47,48,49,50,51,52,60,62,63,64,68,82,90,91,95,98,99,100,105,106,109,112,116,118,124,125,126,127,128,129,130,131,141,],[-76,-78,-79,-80,78,-21,-22,-23,-24,-25,-38,-35,-36,-37,-47,-48,-44,-45,-46,-39,-77,-81,-82,78,78,-41,78,78,78,78,78,78,78,-26,78,-60,-40,78,78,78,78,78,78,-42,-43,78,]),'AND':([18,19,20,21,37,38,39,40,41,42,44,45,46,47,48,49,50,51,52,60,62,63,64,68,81,82,90,91,95,98,99,100,105,106,109,112,116,118,124,125,126,127,128,129,130,131,141,],[-76,-78,-79,-80,79,-21,-22,-23,-24,-25,-38,-35,-36,-37,-47,-48,-44,-45,-46,-39,-77,-81,-82,79,107,79,-41,79,79,79,79,79,79,79,-26,79,-60,-40,79,79,79,79,79,79,-42,-43,79,]),'OR':([18,19,20,21,37,38,39,40,41,42,44,45,46,47,48,49,50,51,52,60,62,63,64,68,81,82,90,91,95,98,99,100,105,106,109,112,116,118,124,125,126,127,128,129,130,131,141,],[-76,-78,-79,-80,80,-21,-22,-23,-24,-25,-38,-35,-36,-37,-47,-48,-44,-45,-46,-39,-77,-81,-82,80,108,80,-41,80,80,80,80,80,80,80,-26,80,-60,-40,80,80,80,80,80,80,-42,-43,80,]),'NOT':([18,19,20,21,37,38,39,40,41,42,44,45,46,47,48,49,50,51,52,60,62,63,64,68,82,90,91,95,98,99,100,105,106,109,112,116,118,124,125,126,127,128,129,130,131,141,],[-76,-78,-79,-80,81,-21,-22,-23,-24,-25,-38,-35,-36,-37,-47,-48,-44,-45,-46,-39,-77,-81,-82,81,81,-41,81,81,81,81,81,81,81,-26,81,-60,-40,81,81,81,81,81,81,-42,-43,81,]),'COMMA':([18,19,20,21,32,33,34,35,38,39,40,41,42,44,45,46,47,48,49,50,51,52,59,60,62,63,64,68,69,71,86,87,88,89,90,92,94,95,98,99,100,105,106,109,114,116,117,118,119,120,121,124,125,126,127,128,129,130,131,134,135,136,139,],[-76,-78,-79,-80,67,-17,-18,-38,-21,-22,-23,-24,-25,-38,-35,-36,-37,-47,-48,-44,-45,-46,-64,-39,-77,-81,-82,-20,93,96,-75,117,-61,-62,-41,67,93,-34,-49,-50,-51,-56,-57,-26,134,-60,-64,-40,93,-30,96,-52,-53,-54,-55,-58,-59,-42,-43,-75,-73,117,134,]),'CLBR':([18,19,20,21,22,23,24,25,35,38,39,40,41,42,44,45,46,47,48,49,50,51,52,59,60,62,63,64,65,66,82,86,87,88,89,90,98,99,100,105,106,109,110,111,114,116,117,118,124,125,126,127,128,129,130,131,134,135,136,139,],[-76,-78,-79,-80,-13,-14,-16,-28,-38,-21,-22,-23,-24,-25,-38,-35,-36,-37,-47,-48,-44,-45,-46,-64,-39,-77,-81,-82,-15,-29,109,-75,116,-61,-62,-41,-49,-50,-51,-56,-57,-26,130,131,133,-60,-64,-40,-52,-53,-54,-55,-58,-59,-42,-43,-75,-73,-63,-74,]),'SQCLBR':([18,19,20,21,38,39,40,41,42,44,45,46,47,48,49,50,51,52,60,62,63,64,90,91,98,99,100,105,106,109,116,118,124,125,126,127,128,129,130,131,],[-76,-78,-79,-80,-21,-22,-23,-24,-25,-38,-35,-36,-37,-47,-48,-44,-45,-46,-39,-77,-81,-82,-41,118,-49,-50,-51,-56,-57,-26,-60,-40,-52,-53,-54,-55,-58,-59,-42,-43,]),'CUCLBR':([18,19,20,21,38,39,40,41,42,44,45,46,47,48,49,50,51,52,60,62,63,64,71,90,94,95,98,99,100,105,106,109,116,118,119,120,121,124,125,126,127,128,129,130,131,],[-76,-78,-79,-80,-21,-22,-23,-24,-25,-38,-35,-36,-37,-47,-48,-44,-45,-46,-39,-77,-81,-82,-32,-41,120,-34,-49,-50,-51,-56,-57,-26,-60,-40,-31,-30,-33,-52,-53,-54,-55,-58,-59,-42,-43,]),'CUOPBR':([36,70,93,],[70,70,70,]),'LARGER':([77,78,],[101,103,]),'SMALLER':([77,78,],[102,104,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'statement_list':([0,56,],[2,85,]),'single_statement':([0,2,15,56,72,85,122,133,],[3,27,57,3,57,27,57,57,]),'declaration':([0,2,15,56,72,85,122,133,],[4,4,4,4,4,4,4,4,]),'setting':([0,2,12,15,56,67,72,85,122,133,],[6,6,34,6,6,34,6,6,6,6,]),'if':([0,2,15,56,72,85,122,133,],[7,7,7,7,7,7,7,7,]),'dowhile':([0,2,15,56,72,85,122,133,],[8,8,8,8,8,8,8,8,]),'function':([0,2,15,56,72,85,122,133,],[9,9,9,9,9,9,9,9,]),'callfunc':([0,2,14,15,36,43,56,61,70,72,74,75,76,79,80,84,85,93,96,101,102,103,104,107,108,122,133,140,],[10,10,41,10,41,41,10,41,41,10,41,41,41,41,41,41,10,41,41,41,41,41,41,41,41,10,10,41,]),'cmd':([0,2,14,15,36,43,56,61,70,72,74,75,76,79,80,84,85,93,96,101,102,103,104,107,108,122,133,140,],[11,11,42,11,42,42,11,42,42,11,42,42,42,42,42,42,11,42,42,42,42,42,42,42,42,11,11,42,]),'type':([0,2,15,26,56,72,83,85,86,122,133,134,],[12,12,12,66,12,12,110,12,115,12,12,115,]),'variable':([0,2,12,14,15,36,43,56,59,61,67,70,72,74,75,76,79,80,83,84,85,93,96,101,102,103,104,107,108,117,122,133,140,],[13,13,33,38,13,38,38,13,88,38,33,38,13,38,38,38,38,38,111,38,13,38,38,38,38,38,38,38,38,88,13,13,38,]),'vectorof':([0,2,15,26,56,72,83,85,86,122,133,134,],[25,25,25,25,25,25,25,25,25,25,25,25,]),'var':([12,67,],[32,92,]),'expr':([14,36,43,61,70,74,75,76,79,80,84,93,96,101,102,103,104,107,108,140,],[37,68,82,91,95,98,99,100,105,106,112,95,95,124,125,126,127,128,129,141,]),'const':([14,36,43,59,61,70,74,75,76,79,80,84,93,96,101,102,103,104,107,108,117,140,],[39,39,39,89,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,89,39,]),'math_expr':([14,36,43,61,70,74,75,76,79,80,84,93,96,101,102,103,104,107,108,140,],[40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,]),'digit':([14,36,43,59,61,70,74,75,76,79,80,84,93,96,101,102,103,104,107,108,117,140,],[45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,]),'bool':([14,36,43,59,61,70,74,75,76,79,80,84,93,96,101,102,103,104,107,108,117,140,],[46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,]),'sizeof':([14,36,43,59,61,70,74,75,76,79,80,84,93,96,101,102,103,104,107,108,117,140,],[47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,]),'statement_gr':([15,72,122,133,],[54,97,137,138,]),'index':([17,35,44,60,90,],[60,60,60,90,90,]),'dir':([18,],[62,]),'setarr':([36,70,93,],[69,94,119,]),'exprarr':([36,70,93,96,],[71,71,71,121,]),'varlist':([59,117,],[87,136,]),'arrtype':([86,134,],[114,139,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','ParserFile.py',23),
  ('statement_list -> statement_list single_statement','statement_list',2,'p_statement_list','ParserFile.py',27),
  ('statement_list -> single_statement','statement_list',1,'p_statement_list','ParserFile.py',28),
  ('single_statement -> declaration ENDSTR','single_statement',2,'p_single_statement','ParserFile.py',33),
  ('single_statement -> setting ENDSTR','single_statement',2,'p_single_statement','ParserFile.py',34),
  ('single_statement -> if','single_statement',1,'p_single_statement','ParserFile.py',35),
  ('single_statement -> dowhile','single_statement',1,'p_single_statement','ParserFile.py',36),
  ('single_statement -> function','single_statement',1,'p_single_statement','ParserFile.py',37),
  ('single_statement -> callfunc ENDSTR','single_statement',2,'p_single_statement','ParserFile.py',38),
  ('single_statement -> cmd ENDSTR','single_statement',2,'p_single_statement','ParserFile.py',39),
  ('single_statement -> ENDSTR','single_statement',1,'p_single_statement','ParserFile.py',40),
  ('declaration -> type var','declaration',2,'p_declaration','ParserFile.py',44),
  ('type -> INT','type',1,'p_type','ParserFile.py',48),
  ('type -> BOOL','type',1,'p_type','ParserFile.py',49),
  ('type -> SHORT INT','type',2,'p_type','ParserFile.py',50),
  ('type -> SHORT','type',1,'p_type','ParserFile.py',51),
  ('var -> variable','var',1,'p_var','ParserFile.py',55),
  ('var -> setting','var',1,'p_var','ParserFile.py',56),
  ('var -> var COMMA var','var',3,'p_var','ParserFile.py',57),
  ('setting -> variable SET expr','setting',3,'p_setting','ParserFile.py',62),
  ('expr -> variable','expr',1,'p_expr','ParserFile.py',66),
  ('expr -> const','expr',1,'p_expr','ParserFile.py',67),
  ('expr -> math_expr','expr',1,'p_expr','ParserFile.py',68),
  ('expr -> callfunc','expr',1,'p_expr','ParserFile.py',69),
  ('expr -> cmd','expr',1,'p_expr','ParserFile.py',70),
  ('expr -> OPBR expr CLBR','expr',3,'p_expr','ParserFile.py',71),
  ('setting -> variable SET setarr','setting',3,'p_setting_arr','ParserFile.py',75),
  ('type -> vectorof','type',1,'p_type_arr','ParserFile.py',79),
  ('vectorof -> VECTOROF type','vectorof',2,'p_vectorof','ParserFile.py',83),
  ('setarr -> CUOPBR setarr CUCLBR','setarr',3,'p_setarr','ParserFile.py',87),
  ('setarr -> setarr COMMA setarr','setarr',3,'p_setarr','ParserFile.py',88),
  ('setarr -> exprarr','setarr',1,'p_setarr','ParserFile.py',89),
  ('exprarr -> exprarr COMMA exprarr','exprarr',3,'p_exprarr','ParserFile.py',93),
  ('exprarr -> expr','exprarr',1,'p_exprarr','ParserFile.py',94),
  ('const -> digit','const',1,'p_const','ParserFile.py',98),
  ('const -> bool','const',1,'p_const','ParserFile.py',99),
  ('const -> sizeof','const',1,'p_const','ParserFile.py',100),
  ('variable -> VARIABLE','variable',1,'p_variable','ParserFile.py',104),
  ('variable -> VARIABLE index','variable',2,'p_variable','ParserFile.py',105),
  ('index -> SQOPBR expr SQCLBR','index',3,'p_index','ParserFile.py',109),
  ('index -> index index','index',2,'p_index','ParserFile.py',110),
  ('sizeof -> SIZEOF OPBR type CLBR','sizeof',4,'p_sizeof','ParserFile.py',114),
  ('sizeof -> SIZEOF OPBR variable CLBR','sizeof',4,'p_sizeof','ParserFile.py',115),
  ('bool -> TRUE','bool',1,'p_bool','ParserFile.py',119),
  ('bool -> FALSE','bool',1,'p_bool','ParserFile.py',120),
  ('bool -> UNDEFINED','bool',1,'p_bool','ParserFile.py',121),
  ('digit -> INTTYP','digit',1,'p_digit','ParserFile.py',125),
  ('digit -> SHORTTYP','digit',1,'p_digit','ParserFile.py',126),
  ('math_expr -> expr EQUAL expr','math_expr',3,'p_math_expr','ParserFile.py',130),
  ('math_expr -> expr SUB expr','math_expr',3,'p_math_expr','ParserFile.py',131),
  ('math_expr -> expr ADD expr','math_expr',3,'p_math_expr','ParserFile.py',132),
  ('math_expr -> expr SECOND LARGER expr','math_expr',4,'p_math_expr','ParserFile.py',133),
  ('math_expr -> expr SECOND SMALLER expr','math_expr',4,'p_math_expr','ParserFile.py',134),
  ('math_expr -> expr FIRST LARGER expr','math_expr',4,'p_math_expr','ParserFile.py',135),
  ('math_expr -> expr FIRST SMALLER expr','math_expr',4,'p_math_expr','ParserFile.py',136),
  ('math_expr -> expr AND expr','math_expr',3,'p_math_expr','ParserFile.py',137),
  ('math_expr -> expr OR expr','math_expr',3,'p_math_expr','ParserFile.py',138),
  ('math_expr -> expr NOT AND expr','math_expr',4,'p_math_expr','ParserFile.py',139),
  ('math_expr -> expr NOT OR expr','math_expr',4,'p_math_expr','ParserFile.py',140),
  ('callfunc -> VARIABLE OPBR varlist CLBR','callfunc',4,'p_callfunc','ParserFile.py',144),
  ('varlist -> variable','varlist',1,'p_varlist','ParserFile.py',148),
  ('varlist -> const','varlist',1,'p_varlist','ParserFile.py',149),
  ('varlist -> varlist COMMA varlist','varlist',3,'p_varlist','ParserFile.py',150),
  ('varlist -> <empty>','varlist',0,'p_varlist','ParserFile.py',151),
  ('if -> IF expr THEN statement_gr ELSE statement_gr','if',6,'p_if','ParserFile.py',155),
  ('if -> IF expr THEN statement_gr error','if',5,'p_iferr','ParserFile.py',159),
  ('if -> IF expr error','if',3,'p_iferr','ParserFile.py',160),
  ('statement_gr -> BEGIN statement_list END','statement_gr',3,'p_statement_gr','ParserFile.py',164),
  ('statement_gr -> single_statement','statement_gr',1,'p_statement_gr','ParserFile.py',165),
  ('dowhile -> DO statement_gr WHILE expr ENDSTR','dowhile',5,'p_dowhile','ParserFile.py',169),
  ('dowhile -> DO error','dowhile',2,'p_dowhileerr','ParserFile.py',173),
  ('function -> FUNCTION VARIABLE OPBR arrtype CLBR statement_gr RETURN expr ENDSTR','function',9,'p_function','ParserFile.py',178),
  ('arrtype -> type VARIABLE','arrtype',2,'p_arrtype','ParserFile.py',184),
  ('arrtype -> arrtype COMMA arrtype','arrtype',3,'p_arrtype','ParserFile.py',185),
  ('arrtype -> <empty>','arrtype',0,'p_arrtype','ParserFile.py',186),
  ('cmd -> MOVE','cmd',1,'p_cmd','ParserFile.py',190),
  ('cmd -> MOVE dir','cmd',2,'p_cmd','ParserFile.py',191),
  ('cmd -> RIGHT','cmd',1,'p_cmd','ParserFile.py',192),
  ('cmd -> LEFT','cmd',1,'p_cmd','ParserFile.py',193),
  ('cmd -> LMS','cmd',1,'p_cmd','ParserFile.py',194),
  ('dir -> RIGHT','dir',1,'p_dir','ParserFile.py',198),
  ('dir -> LEFT','dir',1,'p_dir','ParserFile.py',199),
]
